syntax = "proto3";

option go_package = "kkako_video/api/comment/v1";

import "google/api/annotations.proto";
//import "validate/validate.proto";

service UserService {
  rpc GetUser (GetUserReq) returns (GetUserRes) {
    option (google.api.http) = {
      get: "/v1/users/{id}"
    };
  };

  rpc AddUser (AddUserReq) returns (AddUserRes) {
    option (google.api.http) = {
      post: "/v1/users"
      body: "*"
    };
  };

  rpc UserNews (UserNewsReq) returns (UserNewsRes) {
    option (google.api.http) = {
      post: "/v1/users/:id/news"
      body: "*"
    };
  };

  rpc UserFollow (UserFollowReq) returns (UserFollowRes) {
    option (google.api.http) = {
      post: "/v1/users/:id/follows"
      body: "*"
    };
  };

  rpc UserLike (UserLikeReq) returns (UserLikeRes) {
    option (google.api.http) = {
      post: "/v1/users/:id/likes"
      body: "*"
    };
  };

}

message GetUserReq {
  // @inject_tag: form:"id"
  int64 id = 1;
}

message GetUserRes {
  int64 id = 1;
  string name = 2;
  string avatar = 3;
  string email = 4;
  string brief = 5;
  int32 state = 6;
}

message AddUserReq {
  string name = 1;
}

message AddUserRes {}

message UserNewsReq {}

message UserNewsRes {}

message UserFollowReq {
  int32 type = 1;
  int64 id = 2;
}

message UserFollowRes {}

message UserLikeReq {
  int32 type = 1;
  int64 id = 2;
}

message UserLikeRes {}

message User {
  int64 id = 1;
  string name = 2;
  string avatar = 3;
  string brief = 4;
}

message Count {
  int64 followCount = 1;
  int64 fansCount = 2;
  int64 likeCount = 3;
}
